import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'screens/root_app.dart';
import 'screens/login.dart';
import 'theme/colors.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:firebase_app_check/firebase_app_check.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'services/notification_services.dart'; // Tek servis dosyasÄ±nÄ± kullanÄ±yoruz
import 'package:intl/date_symbol_data_local.dart';
import 'package:timezone/timezone.dart' as tz;
import 'package:timezone/data/latest.dart' as tz;
/// ğŸ”„ Arka planda/uygulama kapalÄ±yken gelen bildirim handler'Ä±
@pragma('vm:entry-point') // Bu satÄ±r Ã¶nemli!
Future<void> _firebaseMessagingBackgroundHandler(RemoteMessage message) async {
  await Firebase.initializeApp();
  print('ğŸ”” [Background] Bildirim baÅŸlÄ±ÄŸÄ±: ${message.notification?.title}');
  // Firestore'a bildirim ekleme vs. yapÄ±labilir

}

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  tz.initializeTimeZones();
  await Firebase.initializeApp();

  await initializeDateFormatting('tr_TR', null);
  await FirebaseAppCheck.instance.activate(
    // androidProvider: AndroidProvider.debug, // test iÃ§in aÃ§Ä±labilir
    // iosProvider: IOSProvider.debug,
  );

  await FirebaseMessaging.instance.requestPermission(); // iOS izin

  // Arka plan bildirimleri iÃ§in
  FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);

  runApp(const ProviderScope(child: MyApp()));
}

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  @override
  void initState() {
    super.initState();

    // Bildirim servisini baÅŸlat, context'i parametre olarak veriyoruz
   // NotificationService.initialize(context);

    // FCM token'Ä± al ve Firestore'a kaydet (giriÅŸ yapan kullanÄ±cÄ±yla baÄŸla)
    FirebaseMessaging.instance.getToken().then((token) {
      print("ğŸ“± FCM Token: $token");
      final currentUser = FirebaseAuth.instance.currentUser;
      if (currentUser != null && token != null) {

      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Patico',
      theme: ThemeData(
        primaryColor: AppColor.primary,
      ),
      home: const LoginScreen(),
    );
  }
}
